import 'package:flutter/material.dart';
import '../models/media_model.dart';
import '../services/media_service.dart';

class MediaProvider with ChangeNotifier {
  final MediaService _mediaService = MediaService();
  List<MediaModel> _mediaList = [];
  bool _loading = false;

  List<MediaModel> get mediaList => List.unmodifiable(_mediaList); // üîí tr√°nh s·ª≠a tr·ª±c ti·∫øp
  bool get loading => _loading;

  // ‚úÖ H√†m load to√†n b·ªô media v·ªõi ki·ªÉm so√°t tr·∫°ng th√°i an to√†n
  Future<void> fetchMedia() async {
    if (_loading) return; // NgƒÉn g·ªçi l·∫∑p

    _loading = true;
    notifyListeners();

    try {
      final result = await _mediaService.loadAll();
      if (result is List<MediaModel>) {
        _mediaList = result;
      }
    } catch (e) {
      debugPrint('‚ö†Ô∏è L·ªói khi load media: $e');
    } finally {
      _loading = false;
      notifyListeners();
    }
  }

  Future<void> loadMedia() async {
    await fetchMedia();
  }

  // ‚úÖ Th√™m media v·ªõi reload l·∫°i danh s√°ch (an to√†n h∆°n append)
  Future<void> addMedia(MediaModel media) async {
    try {
      await _mediaService.add(media);
      // T·∫£i l·∫°i danh s√°ch t·ª´ service ƒë·ªÉ ƒë·ªìng b·ªô
      await fetchMedia();
    } catch (e) {
      debugPrint('‚ö†Ô∏è L·ªói khi th√™m media: $e');
    }
  }

  // ‚úÖ X√≥a media an to√†n, tr√°nh l·ªói RangeError
  Future<void> deleteMedia(String id) async {
    try {
      await _mediaService.delete(id);
      // D√πng where ƒë·ªÉ l·ªçc l·∫°i danh s√°ch m·ªõi
      _mediaList = _mediaList.where((m) => m.id != id).toList();
      notifyListeners();
    } catch (e) {
      debugPrint('‚ö†Ô∏è L·ªói khi x√≥a media: $e');
    }
  }
}
